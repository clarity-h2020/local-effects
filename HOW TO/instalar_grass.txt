INSTALL
=======

POSTGRES
POSTGIS
TOMCAT
GEOSERVER
GDAL-BIN / GDAL-DATA
PYTHON

python-NUMPY
libgdal-dev / libgdal-java
grass / grass-core

--BUILDING_SHADOW SE PONE 1 POR DEFECTO (NO INTERSECCION) Y LUEGO SE ACTULIZA A 0 LOS QUE SI INTERSECTAN:

update roads
set building_shadow=0
from (
select r.gid
from IT003L3_NAPOLI_UA2012_roads r, IT003L3_NAPOLI_UA2012_buildings b
where ST_Intersects( r.geom , b.geom ) is true
group by r.gid) as subquery
where IT003L3_NAPOLI_UA2012_roads.gid=subquery.gid
;


--HILLSHADE_BUILDING //SABER CON QUE INTERSECTAS, RECUPERAR LOS CODE2012 PARA SABERLO DE CADA ROAD
select r.gid, b.CODE2012
from IT003L3_NAPOLI_UA2012_roads r, IT003L3_NAPOLI_UA2012_buildings b
where ST_Intersects( r.geom , b.geom ) is true
order by r.gid
;


#LAYERS FROM 1-8
ogr2ogr -sql "SELECT area,perimeter,CODE2012 FROM IT003L3_NAPOLI_UA2012 WHERE CODE2012='12210' OR CODE2012='12220'" roads UA_IT003L3_NAPOLI/Shapefiles/IT003L3_NAPOLI_UA2012.shp
ogr2ogr -sql "SELECT area,perimeter,CODE2012 FROM IT003L3_NAPOLI_UA2012 WHERE CODE2012='50000'" water UA_IT003L3_NAPOLI/Shapefiles/IT003L3_NAPOLI_UA2012.shp
ogr2ogr -sql "SELECT area,perimeter,CODE2012 FROM IT003L3_NAPOLI_UA2012 WHERE CODE2012='12230'" railways UA_IT003L3_NAPOLI/Shapefiles/IT003L3_NAPOLI_UA2012.shp

#LAYERS 9,10,11,12 GENERATION FOR HILLSHADE_BUILDING INTERSECTIONS
ogr2ogr -sql "SELECT area,perimeter,CODE2012 FROM "$NAME" WHERE CODE2012='11100' OR CODE2012='11210'" layer9 $SHP
ogr2ogr -sql "SELECT area,perimeter,CODE2012 FROM "$NAME" WHERE CODE2012='11220'" layer10 $SHP
ogr2ogr -sql "SELECT area,perimeter,CODE2012 FROM "$NAME" WHERE CODE2012='11230' OR CODE2012='11240' OR CODE2012='11300'" layer11 $SHP
ogr2ogr -sql "SELECT area,perimeter,CODE2012 FROM "$NAME" WHERE CODE2012='12100'" layer12 $SHP

#LAYER 9+10+11+12 GENERATION FOR BUILDING_SHADOW INTERSECTION
ogr2ogr -sql "SELECT area,perimeter,CODE2012 FROM IT003L3_NAPOLI_UA2012 WHERE CODE2012='11230' OR CODE2012='11240' OR CODE2012='11300' OR CODE2012='12100' OR CODE2012='11220' OR CODE2012='11100' OR CODE2012='11210'" IT003L3_NAPOLI_UA2012_layers9_12 $SHP
shp2pgsql -s 3035 -I -d IT003L3_NAPOLI_UA2012_layers9_12/IT003L3_NAPOLI_UA2012.shp IT003L3_NAPOLI_UA2012_layers9_12 > IT003L3_NAPOLI_UA2012_layers9_12.sql
psql -d clarity -U postgres -f IT003L3_NAPOLI_UA2012_layers9_12.sql

UPDATE IT003L3_NAPOLI_UA2012_roads SET building_shadow=0 FROM (SELECT r.gid FROM IT003L3_NAPOLI_UA2012_roads r, IT003L3_NAPOLI_UA2012_buildings b WHERE ST_Intersects( r.geom , b.geom ) IS TRUE GROUP BY r.gid) AS subquery WHERE IT003L3_NAPOLI_UA2012_roads.gid=subquery.gid;


#RASTER A SHAPEFILE
sudo apt-get install python-gdal
gdal_polygonize.py 200km_10m_N20E46_class40.TIF -f "ESRI Shapefile" 200km_10m_N20E46_class40.shp



IDEA
====
Usar script maestro que reciba el nombre de la ciudad y busca los shapefiles apropiados para alimentar los scripts que generan cada capa en BD
o
Script maestro que reciba un bbox EPSG:3035 y atacar la tabla en BD de URBAN ATLAS ALL, extrae de ahi lo contenido en ese BBOX y generar un SHP para que se puedan ejecutar los scripts que generan las capas:

SELECT *
FROM planet_osm_roads
WHERE planet_osm_roads.geom && ST_Transform(
  ST_MakeEnvelope(-122.271189, 37.804339, -122.275244, 37.808264, 
  4326),3857
);

o bien...

SELECT *
FROM planet_osm_roads
WHERE ST_Contains(
    ST_Transform(
        ST_MakeEnvelope(-122.271189, 37.804339, -122.275244, 37.808264, 
        4326)
        ,3857)
    ,planet_osm_roads.geom);


RECALCULADO DE RASTERS:
=======================
gdal_calc.py -A data/N20E46/class_40/200km_10m_N20E46_class40.TIF --outfile=200km_10m_N20E46_class40_calculated_2.TIF --calc="0*(A<25)+1*(A>=25)" --NoDataValue=256
python gdal_reclassify.py data/N20E46/class_40/200km_10m_N20E46_class40.TIF 200km_10m_N20E46_class40_calculated.TIF -r "0,1,1" -c "<25,==25,>25" -d 256 -n true -p "COMPRESS=LZW"


VECTORIZACION DE RASTERS:
=========================
gdal_polygonize.bat C:\Users\A146855\Desktop\SCRIPTS_PLINIVS\200km_10m_N20E46_class40_calculated_2.TIF C:/Users/A146855/Desktop/poligonizado.shp -b 1 -f "ESRI Shapefile" None value


QUITAR REPETIDOS:
=================
CREATE TABLE unique_trees AS
 WITH unique_trees (id,gid,area,perimeter,albedo,emissivity,transmissivity,vegetation_shadow,run_off_coefficient,building_shadow,hillshade_green_fraction,geom) as 
  (SELECT row_number() OVER (PARTITION BY geom) as id,gid,area,perimeter,albedo,emissivity,transmissivity,vegetation_shadow,run_off_coefficient,building_shadow,hillshade_green_fraction,geom 
    FROM it003l3_napoli_ua2012_trees)
 SELECT gid,area,perimeter,albedo,emissivity,transmissivity,vegetation_shadow,run_off_coefficient,building_shadow,hillshade_green_fraction,geom 
 FROM unique_trees INFO
 WHERE id=1;


INSERTAR EN OTRA TABLA CON SECUENCIA DE PK
==========================================
insert into it003l3_napoli_ua2012_vegetation (
   select nextval('it003l3_napoli_ua2012_vegetation_gid_seq'), ST_Perimeter(geom), ST_Area(geom)
   from "200km_10m_n20e46_class40"
);


GRASS
=====
0) sustituir en el script:
echo "GISDBASE: /home/mario.nunez/script/grass" >>$GISRC
echo "LOCATION_NAME: location" >>$GISRC
echo "MAPSET: PERMANENT" >>$GISRC
#echo "MAPSET: mapset" >>$GISRC
1) crear carpetas:
grass/location/mapset
grass/location/PERMANENT
2) ejecutar:
grass74 -c /home/mario.nunez/script/grass/location
3) copiar ficheros de http://trac.osgeo.org/grass/browser/grass/trunk/demolocation#PERMANENT 
PROJ_UNITS
PROJ_INFO
WIND
DEFAULT_WIND


SELECCIONAR ESM RASTER A PARTIR DE LA INTERSECCION CON LOS DATOS DE URBAN ATLAS:
--------------------------------------------------------------------------------
select distinct(e.gid), e.name, e.geom, e.x_corner, e.y_corner
from esm2017_download_200kmgrid_laea e, it003l3_napoli_ua2012_layers9_12 l
where ST_Intersects(l.geom,e.geom);

OGRINFO
=======
ogrinfo -al -so shapefile.shp

renombrar tablas
----------------
ALTER TABLE "200km_10m_N20E46_class30" RENAME TO built_open_spaces;
ALTER SEQUENCE "200km_10m_N20E46_class30_gid_seq" RENAME TO built_open_spaces_gid_seq;
ALTER INDEX "200km_10m_N20E46_class30_pkey" RENAME TO built_open_spaces_pkey;
ALTER INDEX "200km_10m_N20E46_class30_geom_idx" RENAME TO built_open_spaces_geom_idx;
